{
  "openapi": "3.0.3",
  "info": {
    "title": "Client Authentication API",
    "version": "1.0.0",
    "description": "APIs for generating and refreshing auth tokens using client credentials."
  },
  "servers": [
    {
      "url": "https://v2.flabs.in",
      "description": "Production Server"
    },
    {
      "url": "https://v2staging.flabs.in",
      "description": "Staging Server"
    }
  ],
  "paths": {
    "/client/auth/token": {
      "post": {
        "summary": "Generate auth token",
        "description": "Generates a new auth token and refresh token using client ID and client secret.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  }
                },
                "required": ["clientID", "clientSecret"]
              },
              "example": {
                "clientID": "your-client-id",
                "clientSecret": "your-client-secret"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": {
                      "type": "string",
                      "description": "JWT token valid for 10 minutes"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "Refresh Token will expires after 30 days of inactivity; used to obtain new authentication tokens"
                    },
                    "expiresIn": {
                      "type": "integer",
                      "description": "Time in seconds until auth token expires (600 seconds = 10 minutes)"
                    }
                  }
                },
                "example": {
                  "authToken": "auth-token",
                  "refreshToken": "refresh-token",
                  "expiresIn": 600
                }
              }
            }
          },
          "4XX": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": false,
                  "status": 401,
                  "message": "Unauthorized",
                  "error": {
                    "details": "Invalid client credentials"
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": false,
                  "status": 500,
                  "message": "Internal Server Error",
                  "error": {
                    "details": "An unexpected error occurred"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/client/auth/token/refresh": {
      "post": {
        "summary": "Refresh auth token",
        "description": "Get new Authorization token using the refresh token and client credentials.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": ["clientID", "refreshToken"]
              },
              "example": {
                "clientID": "your-client-id",
                "refreshToken": "your-refresh-token"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": {
                      "type": "string",
                      "description": "JWT token valid for 10 minutes"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "Refresh Token will expires after 30 days of inactivity; used to obtain new authentication tokens"
                    },
                    "expiresIn": {
                      "type": "integer",
                      "description": "Time in seconds until auth token expires (600 seconds = 10 minutes)"
                    }
                  }
                },
                "example": {
                  "authToken": "auth-token",
                  "refreshToken": "refresh-token",
                  "expiresIn": 600
                }
              }
            }
          },
          "4XX": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": false,
                  "status": 401,
                  "message": "Unauthorized",
                  "error": {
                    "details": "Invalid client credentials"
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": false,
                  "status": 500,
                  "message": "Internal Server Error",
                  "error": {
                    "details": "An unexpected error occurred"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
